import telebot
import sqlite3
from datetime import datetime

import config
import bot_messages
import bot_utils

# –í–µ—Ä—Å–∏—è —Ä–µ–ª–∏–∑–∞
version = '0.6  '
# –§–∏–∫—Å–∏—Ä—É–µ–º –≤—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞
start_time = datetime.now().strftime("%H:%M:%S - %Y/%m/%d")

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞, –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç—å –æ—Ç–∫–ª—é—á–µ–Ω–∞ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –≥–æ–Ω–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏(threaded=False)
bot = telebot.TeleBot(config.bot_token, threaded=False)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–æ–º–µ—Ä–æ–≤ –ö–ü, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –æ–∂–∏–¥–∞–µ–º –≤–≤–æ–¥ —à–∏—Ñ—Ä–∞
have_cp_list = dict()

# –§—É–Ω–∫—Ü–∏—è, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∞—è –∫–æ–º–∞–Ω–¥—É /start
@bot.message_handler(commands=["start"])
def start(message):
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name
    bot.send_message(message.chat.id, bot_messages.start.format(first_name), reply_markup=bot_utils.make_reply_keyboard())
    if config.test_cp in config.secret_dict:
        bot.send_message(message.chat.id, bot_messages.test)
    if bot_utils.save_user(user_id, username, first_name, last_name, command_name='') is not None:
        bot.send_message(message.chat.id, bot_messages.some_error)  # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ë–î

# –§—É–Ω–∫—Ü–∏—è, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∞—è –∫–æ–º–∞–Ω–¥—É /finish
@bot.message_handler(commands=["finish"])
def finish(message):
    user_id = message.from_user.id
    cp_count, cp_sum, cp_list, no_cp_list = bot_utils.user_result(user_id)
    finish_time = datetime.now().strftime("%H:%M:%S - %Y/%m/%d")
    #–î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –ö–ü
    cp_list = ', '.join(cp_list.split(sep=','))
    no_cp_list = ', '.join(no_cp_list.split(sep=','))
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è —Ñ–∏–Ω–∏—à–∞ –≤ –ë–î
    bot_utils.user_write_finish_time(user_id, finish_time)
    tmp_message = bot_messages.fin1.format(cp_count, bot_utils.get_total_cp_count(), cp_list, cp_sum)
    if len(no_cp_list) > 0:
        tmp_message += '\n' + bot_messages.fin2.format(no_cp_list)
    tmp_message += '\n' + bot_messages.fin3.format(finish_time, config.bot_message_org)
    bot.send_message(message.chat.id, tmp_message)


# –§—É–Ω–∫—Ü–∏—è, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∞—è –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∫–æ–º–∞–Ω–¥—É /admin
@bot.message_handler(commands=["admin"])
def admin(message):
    user_id = message.from_user.id
    bot.send_message(message.chat.id, f'{start_time} v{version}')
    if user_id in config.admin_id:
        conn = sqlite3.connect(config.db_filename)
        cursor = conn.cursor()
        cursor.execute('SELECT * FROM users')
        user_list = cursor.fetchall()
        conn.close()
        if len(user_list) > 0:
            for u in user_list:
                user_id = u[0]
                username = u[1]
                first_name = u[2]
                last_name = u[3]
                command_name = u[4]
                cp_count, cp_sum, cp_list, no_cp_list = bot_utils.user_result(user_id)
                cp_list = ', '.join(cp_list.split(sep=','))
                no_cp_list = ', '.join(no_cp_list.split(sep=','))
                bot.send_message(message.chat.id, "id{}-{}\n{} {} {}\n{}/{} = {} = {}({})"
                                 .format(user_id, command_name, username, first_name, last_name, cp_count,
                                         bot_utils.get_total_cp_count(), cp_sum, cp_list, no_cp_list))
        else:
            bot.send_message(message.chat.id, bot_messages.admin_nodata)


# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç —é–∑–µ—Ä–∞
@bot.message_handler(content_types=["text"])
def handle_text(message):
    if message.text == 'üèÅ –§–∏–Ω–∏—à üèÅ':
        finish(message)
        return 0
    user_text_original = message.text  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    user_text = user_text_original.lower().strip()  # –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä –∏ —É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –ø–æ –∫—Ä–∞—è–º
    user_id = message.from_user.id

    # –ö–æ–¥ –ö–ü - —ç—Ç–æ —á–∏—Å–ª–æ, –∞ —à–∏—Ñ—Ä - –í–°–ï–ì–î–ê –Ω–µ —á–∏—Å–ª–æ
    if user_text.isdigit():
        user_cp = int(user_text)
        # –ï—Å–ª–∏ –ö–ü –µ—Å—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ
        if user_cp in config.secret_dict:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤–∑—è—Ç–æ–≥–æ –ö–ü –≤ –±–∞–∑–µ
            conn = sqlite3.connect(config.db_filename)
            cursor = conn.cursor()
            info = cursor.execute('SELECT * FROM game WHERE id=? AND cp=? AND ch=?',
                                  (user_id, user_cp, 1)).fetchone()
            conn.close()
            if info is not None and len(info) > 0:
                # –ö–ü —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ
                bot.send_message(message.chat.id, bot_messages.have_cp.format(user_cp) + ' ' + bot_messages.next_point)
            else:
                # –ö–ü –µ—â—ë –Ω–µ –≤–∑—è—Ç
                have_cp_list.update({user_id: user_cp})
                bot.send_message(message.chat.id, bot_messages.answer.format(user_cp),
                                 reply_markup=bot_utils.make_reply_keyboard())
        else:
            # –ö–ü –Ω–µ—Ç –Ω–∞ –∫–∞—Ä—Ç–µ
            bot.send_message(message.chat.id, bot_messages.no_point)
    else:
        if user_id in have_cp_list:
            user_cp = have_cp_list[user_id]
            cp_secret = config.secret_dict[user_cp].strip().lower()
            user_command_name = ''
            cp_problem = False
            # –ï—Å–ª–∏ —Ç–µ—Å—Ç –≤ —Ä–µ–∂–∏–º–µ –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
            if user_cp == config.test_cp and config.test_command_name_mode:
                # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –∏–º—è –∫–æ–º–∞–Ω–¥—ã –∏ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —à–∏—Ñ—Ä –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ—Ç–≤–µ—Ç–∞
                user_command_name, user_text = user_text_original, cp_secret
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–æ–±—â–∏–ª —á—Ç–æ —Ç–æ—á–∫–∞ —Å–æ—Ä–≤–∞–Ω–∞
            elif user_text in config.no_cp_words:
                # –ü–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —à–∏—Ñ—Ä –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ—Ç–≤–µ—Ç–∞
                user_text = cp_secret
                cp_problem = True

            # –ï—Å–ª–∏ —à–∏—Ñ—Ä —Å–æ–≤–ø–∞–¥–∞–µ—Ç
            if user_text == cp_secret:
                # –¢–µ—Å—Ç–æ–≤–∞—è —Ç–æ—á–∫–∞
                if user_cp == config.test_cp:
                    if config.test_command_name_mode:
                        tmp_message = bot_messages.true_answer.format(user_cp) + ' ' + bot_messages.command_name.format(
                            user_command_name) + ' ' + bot_messages.next_point
                    else:
                        if cp_problem:
                            tmp_message = bot_messages.cp_problem_check.format(user_cp) + ' ' + bot_messages.next_point
                        else:
                            tmp_message = bot_messages.true_answer.format(user_cp) + ' ' + bot_messages.next_point
                    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –≤–∑—è—Ç–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–π —Ç–æ—á–∫–∏
                    if bot_utils.save_user(user_id, message.from_user.username, message.from_user.first_name,
                                           message.from_user.last_name, user_command_name) is not None:
                        tmp_message += bot_messages.some_error
                else:
                    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ö–ü –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                    if cp_problem:
                        user_ch = 0
                    else:
                        user_ch = 1
                    conn = sqlite3.connect(config.db_filename)
                    cursor = conn.cursor()
                    try:
                        cursor.execute("INSERT INTO game (id, cp, ch) VALUES (?, ?, ?)",
                                       (user_id, user_cp, user_ch))
                        conn.commit()
                    except sqlite3.IntegrityError:
                        # –ö–ü —É–∂–µ –≤–∑—è—Ç
                        if cp_problem:
                            tmp_message = bot_messages.true_dub.format(user_cp)
                        else:
                            # –ü–æ–º–µ—á–∞–µ–º –ö–ü –≤–∑—è—Ç—ã–º, –Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ –æ–Ω —Ä–∞–Ω–µ–µ –ø–æ–º–µ—á–µ–Ω —Å–æ—Ä–≤–∞–Ω–Ω—ã–º
                            try:
                                cursor.execute("UPDATE game SET ch=? WHERE id=? AND cp=?",
                                               (user_ch, user_id, user_cp))
                                conn.commit()
                            except:
                                tmp_message = bot_messages.some_error
                            else:
                                tmp_message = bot_messages.true_answer.format(user_cp)
                                tmp_message += '\n' + bot_messages.next_point


                    except:
                        # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ë–î
                        tmp_message = bot_messages.some_error
                    else:
                        if cp_problem:
                            tmp_message = bot_messages.cp_problem_check.format(user_cp)
                        else:
                            tmp_message = bot_messages.true_answer.format(user_cp)
                        if user_cp == config.fin_cp:
                            tmp_message += '\n' + bot_messages.in_finish
                        else:
                            tmp_message += '\n' + bot_messages.next_point
                    finally:
                        conn.close()
                bot.send_message(message.chat.id, tmp_message, parse_mode="Markdown")
                if user_cp == config.fin_cp:
                    finish(message)
            else:
                # –ù–µ —É–≥–∞–¥–∞–ª —à–∏—Ñ—Ä
                bot.send_message(message.chat.id, bot_messages.false_answer + ' ' + bot_messages.point)
            if user_id in have_cp_list:
                del have_cp_list[user_id]
        else:
            # –ï—â–µ –Ω–µ –≤–≤—ë–ª –Ω–æ–º–µ—Ä –ö–ü
            bot.send_message(message.chat.id, bot_messages.digits_need)


# –°—Ç–∞—Ä—Ç –ø—Ä–æ–≥—Ä–∞–º–º—ã-----------------------------------------------------------------------------
print('----------------------------')
print('-   ROGAINE TELEGRAM BOT   -')
print(f'-     STARTED v{version}       -')
print(f'-  {start_time}   -')
print('----------------------------')

# –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
bot_utils.create_tables()

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ - –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª –æ–ø—Ä–æ—Å–∞. –ò—Å–ø–æ–ª—å–∑—É–µ–º infinity_polling, —á—Ç–æ–±—ã –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å–æ —Å–≤—è–∑—å—é –±–æ—Ç –Ω–µ –ø–∞–¥–∞–ª
bot.infinity_polling(none_stop=True, interval=0)
